---
# This example makes use of all the available functionality within the vrarest
# module to configure, and execute a provisoining request for a VM.
- hosts: vrops
  vars:
     blueprint_item_name: "CentOS 6.3"
  tasks:

   #============================================================================
   # Get the bearer token.
   #============================================================================
   - name: Get a Bearer Token
     vrarest:
       host: vra-01a.corp.local
       rest_method: get_bearer_token
       username: jason
       password: VMware1!
       tenant: vsphere.local

     register: bearer_result

   - debug: msg="The returned token is {{ bearer_result.token }}"

   #============================================================================
   # Get the catalog items.
   #============================================================================
   - name: Get the Catalog Items
     vrarest:
       host: vra-01a.corp.local
       rest_method: get_catalog_items
       token: "{{ bearer_result.token }}"

     register: catalog_items_result

   #============================================================================
   # Get the list of catalog items.
   #============================================================================
   - name: Get the list of catalog items
     set_fact:
       blueprint_templates: "{{ catalog_items_result['response_json'].content }}"

   - name: Print out the list of catalog items
     debug:
       msg: "The list of blueprint templates: {{ blueprint_templates }}"

   # This loop iterates over the list of catalog items returned from the
   # "get_catalog_items" call, and searches for the one with the name matching
   # the blueprint name being sought.  Once it finds it, it retrieves the
   # relevant information from that item, and sets the appropriate variables to
   # those values.
   - name: Iterate over the catalog items to find the blueprint's catalog ID
     set_fact:
       catalog_item_id: "{{ item.catalogItemId }}"
     with_items: "{{ catalog_items_result['response_json'].content }}"
     when: item.name == blueprint_item_name

   #============================================================================
   # Retrieve the blueprint with the specified ID.
   #============================================================================
   - name: Retrieve the blueprint template
     vrarest:
       host: vra-01a.corp.local
       rest_method: get_blueprint_template
       token: "{{ bearer_result.token }}"
       catalog_item_id: "{{ catalog_item_id }}"
       #vm_template: "{{ catalog_item_id }}"

     register: catalog_template_result

   - name: Set the VM template variable
     set_fact:
       template: "{{ catalog_template_result['response_json'] }}"

   - name: Print out the blueprint template
     debug:
       msg: "Template is {{ template }}"

   #============================================================================
   # Set the new values for the VM configuration attributes that are exposed to
   # the user.
   #============================================================================
   - name: Create the blueprint data item name
     set_fact:
       blueprint_data_item_name: "{{ blueprint_item_name | replace(' ', '_') }}"

   - name: Create the memory path
     set_fact:
       memory_path: "data/{{ blueprint_data_item_name }}/data/memory"

   - name: Set the memory amount
     jsonmodify:
       json: "{{ template }}"
       json_path: "{{ memory_path }}"
       new_value: 1024

     register: json_modify_result

   - debug:
       msg: Output is {{ json_modify_result['modified_json'] }}

   - name: Retrieve the updated template
     set_fact:
       updated_json: "{{ json_modify_result['modified_json'] }}"

   - name: Print the modified template
     debug:
       msg: "Modified template: {{ updated_json }}"

   #============================================================================
   # Submit the blueprint provisioning request using the template object
   # returned by the previous call.
   #============================================================================
   - name: Submit the blueprint provisioning request using the template.
     vrarest:
       host: vra-01a.corp.local
       rest_method: submit_blueprint_request
       token: "{{ bearer_result.token }}"
       vm_template: "{{ updated_json }}"
       catalog_item_id: "{{ catalog_item_id }}"

     register: blueprint_request_result

   - debug:
       msg: "The returned output is {{ blueprint_request_result.output }}"
